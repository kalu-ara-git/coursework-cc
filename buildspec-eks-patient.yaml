version: 0.2
run-as: root

phases:

  install:
    commands:
      - echo Installing eksctl...
      - curl -s --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp   
      - sudo mv /tmp/eksctl /usr/local/bin
      - echo Installing kubectl...
      - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/$(uname -s)/amd64/kubectl"
      - chmod +x kubectl
      - mkdir -p $HOME/bin
      - mv kubectl $HOME/bin/kubectl
      - export PATH=$PATH:$HOME/bin
      - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      - source ~/.bashrc
      - echo 'Check kubectl version'
      - kubectl version --short --client
      - echo Running prerequisites script...
      - chmod +x ci-cd/prereqs.sh
      - sh ci-cd/prereqs.sh

  pre_build:
    commands:
      - echo Logging in to Amazon EKS...
      - aws eks --region us-east-1 update-kubeconfig --name healthsync
      - echo check config 
      - kubectl config view --minify
      - echo check kubectl access
      - kubectl get svc
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 182399719344.dkr.ecr.us-east-1.amazonaws.com
      - REPOSITORY_URI=182399719344.dkr.ecr.us-east-1.amazonaws.com/cc-patient-record-service
      - docker pull $REPOSITORY_URI:latest
      

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...          
      - docker build --cache-from $REPOSITORY_URI:latest -t cc-patient-record-service:latest microservices/patient-service/
      - docker tag cc-patient-record-service:latest 182399719344.dkr.ecr.us-east-1.amazonaws.com/cc-patient-record-service:latest 

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push 182399719344.dkr.ecr.us-east-1.amazonaws.com/cc-patient-record-service:latest
      - echo Push the latest image to cluster
      - kubectl apply -f kubernetes/patient-service/deployment.yaml
      - kubectl rollout restart -f kubernetes/patient-service/deployment.yaml
